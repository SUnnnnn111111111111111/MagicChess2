using UnityEngine;
using System.Collections.Generic;

public class HighlightController : MonoBehaviour
{
    public static HighlightController Instance { get; private set; }
    private List<Tile> highlightedTiles = new List<Tile>();

    private void Awake()
    {
        Instance = this;
    }

    public void HighlightTiles(List<Tile> tilesToHighlight)
    {
        ClearHighlights(); // –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—É—é –ø–æ–¥—Å–≤–µ—Ç–∫—É

        foreach (var tile in tilesToHighlight)
        {
            GameObject highlightObject = tile.GetHighlightObject();
            if (highlightObject != null)
            {
                highlightObject.SetActive(true); // üü¢ –í–∫–ª—é—á–∞–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ö–æ–¥–æ–≤
                tile.SetHighlighted(true); // üöÄ –¢–µ–ø–µ—Ä—å Figure –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —ç—Ç–æ—Ç —Ñ–ª–∞–≥
                highlightedTiles.Add(tile);
                Debug.Log($"‚úÖ [Highlight] –ü–æ–¥—Å–≤–µ—á–µ–Ω–∞ –∫–ª–µ—Ç–∫–∞ {tile.name}");
            }
            else
            {
                Debug.LogWarning($"‚ö†Ô∏è [Highlight] –£ –∫–ª–µ—Ç–∫–∏ {tile.name} –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω –æ–±—ä–µ–∫—Ç –ø–æ–¥—Å–≤–µ—Ç–∫–∏!");
            }
        }
        Debug.Log($"üîÜ [Highlight] –ü–æ–¥—Å–≤–µ—á–µ–Ω–æ {highlightedTiles.Count} –∫–ª–µ—Ç–æ–∫");
    }

    public void ClearHighlights()
    {
        foreach (var tile in highlightedTiles)
        {
            GameObject highlightObject = tile.GetHighlightObject();
            if (highlightObject != null)
            {
                highlightObject.SetActive(false); // üî¥ –í—ã–∫–ª—é—á–∞–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ö–æ–¥–æ–≤
                tile.SetHighlighted(false);
                Debug.Log($"‚ùå [Highlight] –£–±—Ä–∞–Ω–∞ –ø–æ–¥—Å–≤–µ—Ç–∫–∞ —É {tile.name}");
            }

            // üü¢ –¢–∞–∫–∂–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º Hover-–ø–æ–¥—Å–≤–µ—Ç–∫—É
            TileHoverHandler hoverHandler = tile.GetComponentInChildren<TileHoverHandler>();
            if (hoverHandler != null)
            {
                hoverHandler.ResetHoverEffect();
            }
        }
        highlightedTiles.Clear();
    }

}
